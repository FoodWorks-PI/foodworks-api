// Code generated by entc, DO NOT EDIT.

package restaurant

const (
	// Label holds the string label denoting the restaurant type in the database.
	Label = "restaurant"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeAddress holds the string denoting the address edge name in mutations.
	EdgeAddress = "address"

	// Table holds the table name of the restaurant in the database.
	Table = "restaurants"
	// AddressTable is the table the holds the address relation/edge.
	AddressTable = "restaurants"
	// AddressInverseTable is the table name for the Address entity.
	// It exists in this package in order to avoid circular dependency with the "address" package.
	AddressInverseTable = "addresses"
	// AddressColumn is the table column denoting the address relation/edge.
	AddressColumn = "restaurant_address"
)

// Columns holds all SQL columns for restaurant fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Restaurant type.
var ForeignKeys = []string{
	"restaurant_address",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
